<launch>

  <!-- roslaunch arguments -->
  <arg name="debug" default="false"/>
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="fake_execution" default="false" />
  <arg name="allow_trajectory_execution" default="true" />
  <arg name="namespace" default="Maulesh" />
  <arg name="init_pose" />
  <arg name="robot_name" />

  <!-- Load the URDF into the ROS Parameter Server -->
  <!-- This 'prefix' tag references a specific robot namespace within Gazebo -->
  <param name="robot_description"
	 command="$(find xacro)/xacro.py '$(find phantomx_arm_turtlebot_description)/robots/kobuki_hexagons_kinect.urdf.xacro' prefix:=$(arg robot_name)"/>

  <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
	args="$(arg init_pose) -urdf -model $(arg robot_name) -param robot_description"/>
 
  <!-- Call the Gazebo Arm controller for 'this' turtlebot. Robot Namespace is sent as an argument to launch file for the controller -->
  <!-- Make sure that the .yaml config files for ALL the robots (namespaces!) MATCH the namespace used by the controller_manager in Gazebo -->
  <include file="$(find phantomx_arm_turtlebot_moveit_config)/launch/gazeboMultiArmController.launch" >
       <arg name="robot_name" value="$(arg robot_name)" />
  </include>

</launch>

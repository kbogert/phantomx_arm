<launch>

  <!-- By default, we do not start a database (it can be large) -->
  <arg name="db" default="true" />

  <!-- By default, we are not in debug mode -->
  <arg name="debug" default="false" />
  <arg unless="$(arg debug)" name="launch_prefix" value="" />
  <arg if="$(arg debug)" name="launch_prefix" value="gdb --ex run --args" />

  <!-- Load the URDF, SRDF and other .yaml configuration files on the param server -->
  <include file="$(find phantomx_arm_turtlebot_moveit_config)/launch/planning_context.launch">
    <arg name="load_robot_description" value="true"/>
  </include>

  <!-- If needed, broadcast static tf for robot root -->
    <node pkg="tf" type="static_transform_publisher" name="virtual_joint_broadcaster_0" args="0 0 0 0 0 0 /odom base_footprint 100" />

  <!-- We do not have a robot connected, so publish fake joint states -->
  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
    <param name="/use_gui" value="false"/> 
    <rosparam param="/source_list">[/joint_states]</rosparam>
  </node>
  
  <!-- Given the published joint states, publish tf for the robot links -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="true" output="screen" />


 <!-- Run the main MoveIt executable without trajectory execution (we do not have controllers configured by default) -->
  <include file="$(find phantomx_arm_turtlebot_moveit_config)/launch/move_group.launch">
    <arg name="publish_monitored_planning_scene" value="true" />
    <arg name="allow_trajectory_execution" value="true"/>  
    <arg name="fake_execution" value="false"/>
    <arg name="info" value="true"/>
    <arg name="debug" value="$(arg debug)"/>
  </include> 

  <!-- Run Rviz and load the default config to see the state of the move_group node -->
  <include file="$(find phantomx_arm_turtlebot_moveit_config)/launch/moveit_rviz.launch">
    <arg name="config" value="true"/>
    <arg name="debug" value="$(arg debug)"/>
  </include>

 
 <node name="motion_planner" pkg="phantomx_arm_turtlebot_moveit_config" type="motion_planner" respawn="false" launch-prefix="$(arg launch_prefix)" output="screen">
    <rosparam command="load" file="$(find phantomx_arm_turtlebot_moveit_config)/config/kinematics.yaml"/>
    <param name="/move_group/planning_plugin" value="ompl_interface/OMPLPlanner"/>
    <param name="moveit_manage_controllers" value="true"/>
    <param name="allowed_execution_duration_scaling" value="1.2"/> <!-- default 1.2 -->
    <param name="allowed_goal_duration_margin" value="0.5"/> <!-- default 0.5 -->
    <param name="moveit_controller_manager" value="moveit_simple_controller_manager/MoveItSimpleControllerManager"/>
    <rosparam file="$(find phantomx_arm_turtlebot_moveit_config)/config/controllers.yaml"/>
    <rosparam command="load" file="$(find phantomx_arm_turtlebot_moveit_config)/config/ompl_planning.yaml"/>
  </node>

  <!-- If database loading was enabled, start mongodb as well -->
  <include file="$(find phantomx_arm_turtlebot_moveit_config)/launch/default_warehouse_db.launch" if="$(arg db)"/>

</launch>
